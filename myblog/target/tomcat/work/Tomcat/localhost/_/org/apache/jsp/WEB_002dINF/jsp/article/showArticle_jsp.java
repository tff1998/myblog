/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-06-18 14:51:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp.article;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class showArticle_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=utf-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\r\n");

    String path = request.getContextPath();
    String basePath = request.getScheme()+"://"+request.getServerName()+":"+request.getServerPort()+"/";

      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"");
      out.print(basePath);
      out.write("js/bootstrap-paginator.js\" type=\"text/javascript\">\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t\t<!--根据类目查询-->\r\n");
      out.write("\t\t<input type=\"hidden\" id=\"articleCat\" name=\"articleCat\" value=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${requestScope.ArtilceCatId}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("></input>\r\n");
      out.write("\t\t<!--博文列表-->\r\n");
      out.write("\t\t<ul  id=\"article_List\" class=\"article_List\"></ul>\r\n");
      out.write("\t\t<!--分页插件-->\r\n");
      out.write("\t\t<ul id=\"page\" style=\"margin:0 auto;\"></ul>\r\n");
      out.write("\t\t<script type=\"text/javascript\">\r\n");
      out.write("\t\t\t//抽象出根据ajax请求的结果填充博文列表方法\r\n");
      out.write("\t\t\tfunction fillArtilceList(data){\r\n");
      out.write("\t\t\t\t//遍历大类别class=\"list-group-item\"\r\n");
      out.write("\t\t\t\t$.each(data.rows,function(n,item){\r\n");
      out.write("\t\t\t\t\t\tvar temp = \t`<li  >\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"row article_row\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-3 article_img_div\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<img class=\"article_img\" src=\"`+item.image+`\"/>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<div class=\"col-md-9\" style=\"position: relative;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<h4><a href=\"article/showOneArtilce?articleId=`+item.id+`\">`+item.title+`</a></h4>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<p>`+item.head+`</p>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"article_foot_articleCatName\"><span>`+item.articleCatName+`</span></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t<div class=\"article_foot_created\"><span>`+item.useName+item.created+`</span></div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t</li>`\r\n");
      out.write("\t\t\t\t\t\t$(\"#article_List\").append(temp)\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t)\r\n");
      out.write("\t\t\t}\r\n");
      out.write(" \t\t\tcurrentPage = 1;\r\n");
      out.write(" \t\t\ttotalPages = 1;\r\n");
      out.write("\t\t\tArtilceCatId = $(\"#articleCat\").val();\r\n");
      out.write("\t\t\t$.ajax({ \r\n");
      out.write("\t\t\t\tasync:false, \r\n");
      out.write("\t\t\t\ttype:'post',  \r\n");
      out.write("\t\t\t\turl:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/article/getArtilcePage', \r\n");
      out.write("\t\t\t\tdata: {ArtilceCatId: ArtilceCatId},\r\n");
      out.write("\t\t\t\tdataType:'json',  \r\n");
      out.write("\t\t\t\tsuccess:function(data){  \r\n");
      out.write("\t\t\t\t\t\tcurrentPage = data.currentPage;\r\n");
      out.write("\t\t\t\t\t\ttotalPages = data.totalPage;\r\n");
      out.write("\t\t\t\t\t\t<!--填充博文列表-->\r\n");
      out.write("\t\t\t\t\t\tfillArtilceList(data);\r\n");
      out.write("\t\t\t\t}  \r\n");
      out.write("\t\t\t});  \r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#page').bootstrapPaginator({\r\n");
      out.write("\t\t\tbootstrapMajorVersion: 3,//bootstrap版本\r\n");
      out.write("\t\t\tcurrentPage: currentPage,//当前页码\r\n");
      out.write("\t\t\ttotalPages: totalPages,//总页数（后台传过来的数据）\r\n");
      out.write("\t\t\tnumberOfPages: 5,//一页显示几个按钮\r\n");
      out.write("\t\t\titemTexts: function (type, page, current) {\r\n");
      out.write("\t\t\t switch (type) {\r\n");
      out.write("\t\t\t\tcase \"first\": return \"首页\";\r\n");
      out.write("\t\t\t\tcase \"prev\": return \"上一页\";\r\n");
      out.write("\t\t\t\tcase \"next\": return \"下一页\";\r\n");
      out.write("\t\t\t\tcase \"last\": return \"末页\";\r\n");
      out.write("\t\t\t\tcase \"page\": return page;\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t\t},//改写分页按钮字样\r\n");
      out.write("\t\t\tonPageClicked: function (event, originalEvent, type, page) {\r\n");
      out.write("\t\t\t $.ajax({\r\n");
      out.write("\t\t\t\turl: '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/article/getArtilcePage',\r\n");
      out.write("\t\t\t\ttype: 'post',\r\n");
      out.write("\t\t\t\tdata: {page: page},\r\n");
      out.write("\t\t\t\tdataType: 'json',\r\n");
      out.write("\t\t\t\tsuccess: function (data) {\r\n");
      out.write("\t\t\t\t // tplData(data);//处理成功返回的数据\r\n");
      out.write("\t\t\t\t  $(\"#article_List\").empty();\r\n");
      out.write("\t\t\t\t\t<!--填充博文列表-->\r\n");
      out.write("\t\t\t\t\tfillArtilceList(data);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t });\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t });\r\n");
      out.write("\t\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
